@import url('https://fonts.googleapis.com/css2?family=IBM+Plex+Sans:wght@700&display=swap'); /*This links to a google font, allowing me to use it on my webpage*/
@import url('https://fonts.googleapis.com/css2?family=Anton&display=swap');

body { /*Here I have some basic options aimed directly at the body of all my web pages, to ensure there isn't any issue with fonts and page sizing*/
    margin: 0;
    padding: 0;
    overflow: auto;
    font-family: 'Anton', sans-serif;
  }

header { /*Generic options for my headers, so they all stay the same style*/
  color: #eeba30;
  font-size: 25px;
  text-shadow: 5px 5px black;
  }

  /*Below is my background information. It has been a struggle to try and get it optimized for all screen sizes, and I've had consistent 
problems with unwanted empty space. It's a constant work in progress*/

html {
  background-image: url("pawel-czerwinski-Pph9pFa9tM0-unsplash.jpg");
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
}
  
/*Below is the CSS created specifically for my navbar and all related classes*/

  .navbar {
    overflow: hidden;
    background-color: #eeba30;
    width: 100%;
  }
  
  .navbar a {
    float: left;
    display: block;
    color: black;
    text-align: center;
    padding: 22px 24px;
    text-decoration: none;
    font-size: 22px;
  }
  
  .navbar a:hover { /*This allows me to have my navigation buttons colors change when hovered over, I gave it a transition to smoothen it out*/
    background-color: white;
    color: black;
    transition: 0.5s
  }
  
  .navbar a.active {
    background-color: white;
    color: black;
  }
  
  .navbar .icon {
    display: none;
  }

  
/*Below is my media breakpoint, specifically for displaying the navbar appropriately no matter what size the screen is.
I have inserted some javascript I found online to create a navigation button that when minimised eventually turns the 
tabs into a fa fa bars icon that reveal the tabs when clicked or touched. Not entirely sure how it works yet, but it definitely works.*/

  @media screen and (max-width: 800px) {
    .navbar a:not(:first-child) {display: none;}
    .navbar a.icon {
      float: right;
      display: block;
    }
  }
  
  @media screen and (max-width: 800px) {
    .navbar.responsive {position: relative;}
    .navbar.responsive .icon {
      position: absolute;
      right: 0;
      top: 0;
    }
    .navbar.responsive a {
      float: none;
      display: block;
      text-align: left;
    }
  }

/*Below is my container designed specifically to nest in my flex box background on my homepage, and all of it's children. 
I initially created a css grid nested within a flex box to get what I wanted from my homepage, however, the more I went down 
the road and learnt about flex box, the more I realised it would probably be much smarter just to nest flex boxes within eachother 
and tackle css grid when I'm more comfortable with it.*/

.container {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
}

.indexheader {
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
}

.homeimg { /*I found that images can be designed with many more options if they have their own flex box container to hold them.*/
  display: flex;
  justify-content: center;
  align-items: center;
  margin: 50px;
}

.homeimg img {
  border-radius: 50%;
  max-width: 90%;
  height: auto;
}

.homelinks { /*This is the container that holds my links. I have put my links into its own container just like my images, so I can create a background color and control margins much better*/
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-family: 'Anton', sans-serif;
  text-align: center;
  margin: 50px;
}

.link {
  text-decoration: none;
  font-size: 50px;
  background-color: #eeba30;
  color: #000000;
  border-radius: 20%;
  padding: 3%;
  margin: 3%;
  box-shadow: 2.5px 5px #d3a625;
}

.link:hover { /*More pseudo-classes to give my link buttons a transitional animation*/
background-color: white;
color: black;
transition: 0.5s;
box-shadow: 2.5px 5px black;
}

/*Below are all the CSS created specifically for the containers and elements related to the projects section of my home page*/

.pheader {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-content: center;
  text-align: center;
  color: #eeba30;
  text-shadow: 5px 5px black;
}

.pheader img {
  width: 40px;
  height: 40px;
  position: relative;
  right: -20px;
  bottom: -5px;
}

.pcontainer {
  display: flex;
  flex-direction: row;
  justify-content: center;
  flex-wrap: wrap;
}

/*I found that the images for my projects we're much more effective and controllable when given a strict height and width. 
This allows all the images to be the same size without any stretching, and makes my flex-wrap much more effective.*/

.pcontainer img { 
  height: 300px;
  width: 400px;
  object-fit: cover;
  margin: 3%;
  border-radius: 5%;
  box-shadow: 5px 10px #d3a625;
}

/*Below is my media query designed specifically for my home page. Also took a lot of tweaking, 
and was my first real delve into formatting my own media queries. Very proud at it's accuracy to my wireframe.*/

@media screen and (max-width: 1000px) {
  .container {
    padding: 0;
    flex-direction: column;
  }
  indexheader {
    font-size: 15px;
  }
  .homeimg {
    margin: 0;
  }
  .homeimg img {
    max-width: 50%;
  }
  .pheader {
    margin-top: 10px;
  }
  .homelinks {
    margin: 0;
    margin-top: 30px;
  }
  .homeimg {
    margin: 0;
  }
  .link {
    font-size: 30px;
  }
  .pcontainer img {
    margin: 30px;
    width: 80%;
  }
}

/* Below are my basic containers to format my blog styled pages, along with their children. 
In this section I played around with the measurement format 'rem', which sizes elements based 
on the font-size of the root element. I thought this would be the best choice just incase I wanted to tweak the text later on. */

.acontainer {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 0 1.5rem;
  min-height: 100%;
}

.acontainer img {
  height: 300px;
  width: 400px;
  object-fit: cover;
  margin: 3%;
  border-radius: 5%;
  box-shadow: 5px 10px #d3a625;
}

.ainfo {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.blogdate span {
  display: block;
  font-size: 1.6rem;
  font-weight: 600;
  margin: .5rem 0;
  color: #eeba30;
  text-shadow: 5px 5px black;
}

.blogtitle {
  font-size: 2.5rem;
  margin: 1.5 rem 0 2rem;
  text-transform: uppercase;
  color: #eeba30;
  text-shadow: 5px 5px black;
}

.blogtext {
  margin-bottom: 3rem;
  font-size: 1.4rem;
  color: #eeba30;
  text-shadow: 2px 2px black;
  text-align: center;
}

/* Below is my media query specifically for my blog containers*/

@media screen and (max-width: 800px) {
  .acontainer {
    padding: 1rem;
    flex-direction: column;
  }
  .acontainer img {
    margin: 30px;
    width: 80%;
  }
  .ainfo {
    width: 80%;
  }
  .blogtext {
    width: 80%;
  }
}

/*Below is my containers specifically for my contact page*/

.contactbody {
  height: 100vh;
}

.ccontainer {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.sociallinks {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
  background-color: #eeba30;
  border-radius: 50%;
  box-shadow: 10px 10px #d3a625;
  margin: 5%;
}

.sociallinks img {
  width: 200px;
  height: 200px;
}

.sociallinks a {
  margin: 50px;
}

.email {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
  margin: 5%;
}

.email h1 {
  padding: 15px;
  color: #eeba30;
  text-shadow: 5px 5px black;
}

.email h2 {
  color: #eeba30;
  text-shadow: 5px 5px black;
}

.bheader {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
}

.bheader h1 {
  position: relative;
  right: 200px;
}

.bheader h2 {
  position: relative;
  left: 200px;
}

.bcontainer {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
}

.bcontainer img {
  border-radius: 2%;
  box-shadow: 5px 5px #d3a625;
}

.binfo {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  max-width: 40%;
  text-align: center;
  margin: 50px;
}

.binfo h2 {
  font-size: 30px;
  color: #eeba30;
  text-shadow: 3px 3px black;
}

.binfo p {
  font-size: 20px;
  color: #eeba30;
}

.binfo a {
  font-size: 20px;
  padding: 1%;
  margin: 1%;
}

@media screen and (max-width: 800px) {
  .bheader h1 {
    right: 0;
  }
  .bheader h2 {
    left: 0;
    position: relative;
    bottom: 30px;
  }
  .bcontainer img {
    max-width: 50%;
    position: relative;
    bottom: 40px;
  }
  .bheader h2 {
    left: 0;
    position: relative;
    bottom: 30px;
  }
  .binfo {
    max-width: 100%;
  }
  .sociallinks a {
    margin: 25px;
  }
  .email h1 {
    font-size: 20px;
  }
}

@media screen and (max-width: 500px) {
  .sociallinks img {
    width: 100px;
    height: 100px;
  }
  .sociallinks a {
    margin: 30px;
  }
}

.animate__animated.animate__fadeIn {
  --animate-duration: 2s;
}

.animate__animated.animate__fadeInDown {
  --animate-duration: 2s;
}

.animate__animated.animate__shakeY {
  --animate-duration: 7s;
}