@import url('https://fonts.googleapis.com/css2?family=IBM+Plex+Sans:wght@700&display=swap'); /*This links to a google font, allowing me to use it on my webpage*/
@import url('https://fonts.googleapis.com/css2?family=Anton&display=swap');

body {
    margin: 0;
    padding: 0;
    overflow: auto;
    font-family: 'Anton', sans-serif;
  }

header {
  color: #f15d22;
  }
  
/*Below is the CSS created specifically for my navbar and all related classes*/

  .navbar {
    overflow: hidden;
    background-color: #3e4b60;
    width: 100%;
  }
  
  .navbar a {
    float: left;
    display: block;
    color: #f15d22;
    text-align: center;
    padding: 22px 24px;
    text-decoration: none;
    font-size: 22px;
  }
  
  .navbar a:hover { /*This allows me to have my navigation buttons colors change when hovered over, I gave it a transition to smoothen it out*/
    background-color: white;
    color: black;
    transition: 0.5s
  }
  
  .navbar a.active {
    background-color: white;
    color: black;
  }
  
  .navbar .icon {
    display: none;
  }

  
/*Below is my CSS for displaying the navbar appropriately no matter what size the screen is. I have inserted some javascript I found online to make a phone-like navigation button. Not entirely sure how it works yet, but it definitely works.*/

  @media screen and (max-width: 600px) {
    .navbar a:not(:first-child) {display: none;}
    .navbar a.icon {
      float: right;
      display: block;
    }
  }
  
  @media screen and (max-width: 600px) {
    .navbar.responsive {position: relative;}
    .navbar.responsive .icon {
      position: absolute;
      right: 0;
      top: 0;
    }
    .navbar.responsive a {
      float: none;
      display: block;
      text-align: left;
    }
  }

/*Below is my background information. It has been a struggle to try and get it optimized for all screen sizes, and I've had consistent problems with unwanted empty space. It'll get there though im sure.*/

.background {
  height: 100vh;
  background-image: url("https://images.unsplash.com/photo-1553984840-b8cbc34f5215?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80");
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
}

/*Below is my container designed specifically to nest in my flex box background on my homepage, and all of it's children. After realising you can nest flex box and css grid together I thought it would be the better route for the format of my homepage. It's been constantly tweaked but I feel much more comfortable with it now*/

.container {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
}

.homeimg {
  display: flex;
  justify-content: center;
  align-items: center;
  margin: 50px;
}

.roundhead {
  border-radius: 50%;
  max-width: 90%;
  height: auto;
}

.homelinks {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-family: 'Anton', sans-serif;
  text-align: center;
  margin: 50px;
}

.link {
  text-decoration: none;
  font-size: 50px;
  background-color: #3e4b60;
  color: #f15d22;
  border-radius: 20%;
  padding: 3%;
  margin: 3%;
}

.link:hover {
background-color: white;
color: black;
transition: 0.5s
}

header {
  font-size: 25px;
}

.pheader {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-content: center;
  text-align: center;
}

.pheader img {
  width: 40px;
  height: 40px;
}

.pcontainer {
  display: flex;
  flex-direction: row;
  justify-content: center;
  flex-wrap: wrap;
}

.pcontainer img {
  height: 300px;
  width: 400px;
  object-fit: cover;
  margin: 3%;
  border-radius: 5%;
}

.indexheader {
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
}

/*Below is my media query designed specifically for my home page's container. Also took a lot of tweaking, and was my first real delve into formatting my own media queries. Very proud at it's accuracy to my wireframe.*/

@media screen and (max-width: 1000px) {
  .container {
    padding: 0;
    flex-direction: column;
  }
  header {
    font-size: 15px;
  }
  .roundhead {
    max-width: 50%;
  }
  .pheader {
    margin-top: 10px;
  }
  .homeimg {
    margin: 0;
  }
  .homelinks {
    margin: 0;
  }
  .homeimg {
    margin: 0;
  }
}

/* Below are my basic containers to format my article styled pages, along with their children */

.acontainer {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 0 1.5rem;
  min-height: 100%;
}

.acontainer img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  display: block;
  border-radius: .8rem;
}

.ainfo {
  width: 100%;
  max-width: 98rem;
  padding: 5rem;
  box-shadow: 0 1.4rem 8rem rgba(0,0,0,.2);
  display: flex;
  flex-direction: column;
  align-items: center;
  border-radius: .8rem;
}

.blogdate span {
  display: block;
  font-size: 1.6rem;
  font-weight: 600;
  margin: .5rem 0;
}

.blogtitle {
  font-size: 2.5rem;
  margin: 1.5 rem 0 2rem;
  text-transform: uppercase;
}

.blogtext {
  margin-bottom: 3rem;
  font-size: 1.4rem;
}

@media screen and (max-width: 800px) {
  .acontainer {
    padding: 2.5rem;
    flex-direction: column;
  }
  .acontainerimg {
    min-width: 30rem;
    max-width: 30rem;
  }
}

.flexcolumn {                   /* This is used to change my backgrounds flex direction to column style, specifically for used with my homepage */
  flex-direction: column;
}

.ccontainer {
  margin: 100px;
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
}

.ccontainer img {
  margin: 50px;
}